name: Release on Main

on:
  push:
    branches: [main]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build
        run: |
          set -o pipefail
          ./gradlew build | tee build.log

  validate_version:
    name: Validate Version Number
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate version number
        id: version_check
        run: |
          VERSION_NAME=$(grep versionName app/build.gradle | head -1 | sed 's/.*"\(.*\)".*/\1/')
          TAG_EXISTS=$(git tag -l "v$VERSION_NAME")
          if [ ! -z "$TAG_EXISTS" ]; then
            echo "Version $VERSION_NAME already exists as a tag. Please bump the version before deploying."
            exit 1
          fi
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT

  assemble_release:
    name: Assemble Release APK
    runs-on: ubuntu-latest
    needs: validate_version
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 17

      - name: Cache Gradle
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Assemble Release APK
        run: |
          set -o pipefail
          ./gradlew assembleRelease | tee assemble.log

  create_release:
    name: Create Release and Tag
    runs-on: ubuntu-latest
    needs: assemble_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Get version name
        id: version_check
        run: |
          VERSION_NAME=$(grep versionName app/build.gradle | head -1 | sed 's/.*"\(.*\)".*/\1/')
          echo "version_name=$VERSION_NAME" >> $GITHUB_OUTPUT

      - name: Create Release and Tag
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version_check.outputs.version_name }}
          name: Release v${{ steps.version_check.outputs.version_name }}
          files: app/build/outputs/apk/release/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}